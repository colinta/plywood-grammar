<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>Plywood</string>
	<key>scopeName</key>
	<string>source.plywood</string>
	<key>uuid</key>
	<string>2a72b75d-c1b5-4c6c-a0b0-29d9c41daaa5</string>
	<key>bundleUUID</key>
	<string>b5054b9b-8b92-47ee-a8fb-dc6590eab92c</string>
	<key>fileTypes</key>
	<array>
		<string>ply</string>
		<string>plywood</string>
	</array>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.plywood</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(#).*$\n?</string>
			<key>name</key>
			<string>comment.line.number-sign.plywood</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(0x\h*))</string>
			<key>name</key>
			<string>constant.numeric.integer.hexadecimal.plywood</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(0[0-7]+)</string>
			<key>name</key>
			<string>constant.numeric.integer.octal.plywood</string>
		</dict>
<!--
		<dict>
			<key>match</key>
			<string>\b(?i:(\d+\.\d*(e[\-\+]?\d+)?))(?=[^a-zA-Z_])</string>
			<key>name</key>
			<string>constant.numeric.float.plywood</string>
		</dict>
 -->
		<dict>
			<key>match</key>
			<string>\b(?i:(\d+e[\-\+]?\d+))</string>
			<key>name</key>
			<string>constant.numeric.float.plywood</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b([1-9]+[0-9]*|0)</string>
			<key>name</key>
			<string>constant.numeric.integer.decimal.plywood</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.extends.plywood</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(extends)\b</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>keywords that delimit flow blocks or alter flow from within a block</string>
			<key>match</key>
			<string>\b(elif|else|except|finally|for|if|try|while|with|break|continue|pass|raise|return|yield)\b</string>
			<key>name</key>
			<string>keyword.control.flow.plywood</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>keyword operators that evaluate to True or False</string>
			<key>match</key>
			<string>\b(and|in|is|not|or)\b</string>
			<key>name</key>
			<string>keyword.operator.logical.plywood</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.plywood</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>keywords that haven't fit into other groups (yet).</string>
			<key>match</key>
			<string>\b(print)\b</string>
		</dict>
		<dict>
			<key>match</key>
			<string>&lt;\=|&gt;\=|\=\=|&lt;|&gt;|\!\=</string>
			<key>name</key>
			<string>keyword.operator.comparison.plywood</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\+\=|-\=|\*\=|/\=|//\=|%\=|&amp;\=|\|\=|\^\=|&gt;&gt;\=|&lt;&lt;\=|\*\*\=</string>
			<key>name</key>
			<string>keyword.operator.assignment.augmented.plywood</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\+|\-|\*|\*\*|/|//|%|&lt;&lt;|&gt;&gt;|&amp;|\||\^|~</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.plywood</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\=</string>
			<key>name</key>
			<string>keyword.operator.assignment.plywood</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(def)\s+(?=[A-Za-z_][A-Za-z0-9_]*\s*\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.plywood</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))\s*(?:(\:)|(.*$\n?))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.plywood</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.function.begin.plywood</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.missing-section-begin.plywood</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.plywood</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>contentName</key>
					<string>entity.name.function.plywood</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entity_name_function</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.plywood</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function.parameters.plywood</string>
					<key>end</key>
					<string>(?=\)\s*\:)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#keyword_arguments</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.function.plywood</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.parameters.plywood</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b([a-zA-Z_][a-zA-Z_0-9]*)\s*(?:(,)|(?=[\n\)]))</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(def)\s+(?=[A-Za-z_][A-Za-z0-9_]*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.plywood</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\()|\s*($\n?|#.*$\n?)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.plywood</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.missing-parameters.plywood</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.plywood</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>contentName</key>
					<string>entity.name.function.plywood</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entity_name_function</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(lambda)(?=\s+)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.inline.plywood</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\:)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.plywood</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.function.begin.plywood</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.missing-section-begin.plywood</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.inline.plywood</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\s+</string>
					<key>contentName</key>
					<string>meta.function.inline.parameters.plywood</string>
					<key>end</key>
					<string>(?=\:)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#keyword_arguments</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.function.plywood</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.parameters.plywood</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b([a-zA-Z_][a-zA-Z_0-9]*)\s*(?:(,)|(?=[\n\)\:]))</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\)|\])\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.begin.plywood</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.function-call.arguments.plywood</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.plywood</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function-call.plywood</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#keyword_arguments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?=[A-Za-z_][A-Za-z0-9_]*(?:\.[a-zA-Z_][a-zA-Z_0-9]*)*\s*\()</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.plywood</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function-call.plywood</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*(?:\.[A-Za-z_][A-Za-z0-9_]*)*\s*\()</string>
					<key>end</key>
					<string>(?=\s*\()</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#dotted_name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.plywood</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function-call.arguments.plywood</string>
					<key>end</key>
					<string>(?=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#keyword_arguments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?=[A-Za-z_][A-Za-z0-9_]*(?:\.[a-zA-Z_][a-zA-Z_0-9]*)*\s*\[)</string>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.plywood</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.item-access.plywood</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*(?:\.[A-Za-z_][A-Za-z0-9_]*)*\s*\[)</string>
					<key>end</key>
					<string>(?=\s*\[)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#dotted_name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.plywood</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.item-access.arguments.plywood</string>
					<key>end</key>
					<string>(?=\])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=\)|\])\s*(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.begin.plywood</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.item-access.arguments.plywood</string>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.plywood</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.item-access.plywood</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.plywood</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(def|lambda)\b</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#line_continuation</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#language_variables</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(None|True|False|Ellipsis|NotImplemented)\b</string>
			<key>name</key>
			<string>constant.language.plywood</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string_quoted_single</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string_quoted_double</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#dotted_name</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>end</key>
			<string>(\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.begin.plywood</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.empty-list.plywood</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.end.plywood</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\[)(\s*(\]))\b</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.begin.plywood</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.end.plywood</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.structure.list.plywood</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\[|\,)\s*(?![\],])</string>
					<key>contentName</key>
					<string>meta.structure.list.item.plywood</string>
					<key>end</key>
					<string>\s*(?:(,)|(?=\]))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.list.plywood</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tuple.begin.plywood</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.empty-tuple.plywood</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tuple.end.plywood</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\()(\s*(\)))</string>
			<key>name</key>
			<string>meta.structure.tuple.plywood</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dictionary.begin.plywood</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.empty-dictionary.plywood</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dictionary.end.plywood</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\{)(\s*(\}))</string>
			<key>name</key>
			<string>meta.structure.dictionary.plywood</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\{)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dictionary.begin.plywood</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dictionary.end.plywood</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.structure.dictionary.plywood</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\{|\,|^)\s*(?![\},])</string>
					<key>contentName</key>
					<string>meta.structure.dictionary.key.plywood</string>
					<key>end</key>
					<string>\s*(?:(?=\})|(\:))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.valuepair.dictionary.plywood</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\:|^)\s*</string>
					<key>contentName</key>
					<string>meta.structure.dictionary.value.plywood</string>
					<key>end</key>
					<string>\s*(?:(?=\})|(,))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.dictionary.plywood</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>builtin_exceptions</key>
		<dict>
			<key>match</key>
			<string>(?x)\b(
                (
                    Arithmetic|Assertion|Attribute|Buffer|EOF|Environment|FloatingPoint|IO|
                    Import|Indentation|Index|Key|Lookup|Memory|Name|NotImplemented|OS|Overflow|
                    Reference|Runtime|Standard|Syntax|System|Tab|Type|UnboundLocal|
                    Unicode(Encode|Decode|Translate)?|
                    Value|VMS|Windows|ZeroDivision
                )Error|
                ((Pending)?Deprecation|Runtime|Syntax|User|Future|Import|Unicode|Bytes)?Warning|
                (Base)?Exception|
                SystemExit|StopIteration|NotImplemented|KeyboardInterrupt|GeneratorExit
			)\b</string>
			<key>name</key>
			<string>support.type.exception.plywood</string>
		</dict>
		<key>builtin_functions</key>
		<dict>
			<key>match</key>
			<string>(?x)\b(
                __import__|all|abs|any|apply|callable|chr|cmp|coerce|compile|delattr|dir|
                divmod|eval|execfile|filter|getattr|globals|hasattr|hash|hex|id|
                input|intern|isinstance|issubclass|iter|len|locals|map|max|min|oct|
                ord|pow|range|raw_input|reduce|reload|repr|round|setattr|sorted|
                sum|unichr|vars|zip
			)\b</string>
			<key>name</key>
			<string>support.function.builtin.plywood</string>
		</dict>
		<key>builtin_types</key>
		<dict>
			<key>match</key>
			<string>(?x)\b(
				basestring|bool|buffer|classmethod|complex|dict|enumerate|file|
				float|frozenset|int|list|long|object|open|property|reversed|set|
				slice|staticmethod|str|super|tuple|type|unicode|xrange
			)\b</string>
			<key>name</key>
			<string>support.type.plywood</string>
		</dict>
		<key>constant_placeholder</key>
		<dict>
			<key>match</key>
			<string>(?i:%(\([a-z_]+\))?#?0?\-?[ ]?\+?([0-9]*|\*)(\.([0-9]*|\*))?[hL]?[a-z%])</string>
			<key>name</key>
			<string>constant.other.placeholder.plywood</string>
		</dict>
		<key>docstrings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*(?=[uU]?[rR]?""")</string>
					<key>end</key>
					<string>(?&lt;=""")</string>
					<key>name</key>
					<string>comment.block.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_quoted_double</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*(?=[uU]?[rR]?''')</string>
					<key>end</key>
					<string>(?&lt;=''')</string>
					<key>name</key>
					<string>comment.block.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_quoted_single</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>dotted_name</key>
		<dict>
			<key>begin</key>
			<string>(?=[A-Za-z_][A-Za-z0-9_]*(?:\.[A-Za-z_][A-Za-z0-9_]*)*)</string>
			<key>end</key>
			<string>(?![A-Za-z0-9_\.])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\.)(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#magic_function_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#magic_variable_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegal_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#generic_names</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#builtin_functions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#builtin_types</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#builtin_exceptions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegal_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#magic_function_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#magic_variable_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#language_variables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#generic_names</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>entity_name_function</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#magic_function_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#illegal_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic_names</string>
				</dict>
			</array>
		</dict>
		<key>escaped_char</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.hex.plywood</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.linefeed.plywood</string>
				</dict>
				<key>11</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.return.plywood</string>
				</dict>
				<key>12</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.tab.plywood</string>
				</dict>
				<key>13</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.vertical-tab.plywood</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.octal.plywood</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.newline.plywood</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backlash.plywood</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.double-quote.plywood</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.single-quote.plywood</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.bell.plywood</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backspace.plywood</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.formfeed.plywood</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\\x[0-9A-F]{2})|(\\[0-7]{3})|(\\\n)|(\\\\)|(\\\")|(\\')|(\\a)|(\\b)|(\\f)|(\\n)|(\\r)|(\\t)|(\\v)</string>
		</dict>
		<key>escaped_unicode_char</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.unicode.16-bit-hex.plywood</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.unicode.32-bit-hex.plywood</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.unicode.name.plywood</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\\U[0-9A-Fa-f]{8})|(\\u[0-9A-Fa-f]{4})|(\\N\{[a-zA-Z ]+\})</string>
		</dict>
		<key>function_name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#magic_function_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#magic_variable_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_exceptions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_functions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic_names</string>
				</dict>
			</array>
		</dict>
		<key>generic_names</key>
		<dict>
			<key>match</key>
			<string>[A-Za-z_][A-Za-z0-9_]*</string>
		</dict>
		<key>illegal_names</key>
		<dict>
			<key>match</key>
			<string>\b(and|as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|not|or|pass|print|raise|return|try|while|with|yield)\b</string>
			<key>name</key>
			<string>invalid.illegal.name.plywood</string>
		</dict>
		<key>keyword_arguments</key>
		<dict>
			<key>begin</key>
			<string>\b([a-zA-Z_][a-zA-Z_0-9]*)\s*(=)(?!=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.plywood</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.plywood</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\s*(?:(,)|(?=$\n?|[\)\:]))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.parameters.plywood</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>language_variables</key>
		<dict>
			<key>match</key>
			<string>\b(self|cls)\b</string>
			<key>name</key>
			<string>variable.language.plywood</string>
		</dict>
		<key>line_continuation</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.continuation.line.plywood</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unexpected-text.plywood</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\\)(.*)$\n?</string>
		</dict>
		<key>magic_function_names</key>
		<dict>
			<key>comment</key>
			<string>these methods have magic interpretation by plywood and are generally called indirectly through syntactic constructs</string>
			<key>match</key>
			<string>(?x)\b(__(?:
						abs|add|and|call|cmp|coerce|complex|contains|del|delattr|
						delete|delitem|delslice|div|divmod|enter|eq|exit|float|
						floordiv|ge|get|getattr|getattribute|getitem|getslice|gt|
						hash|hex|iadd|iand|idiv|ifloordiv|ilshift|imod|imul|init|
						int|invert|ior|ipow|irshift|isub|iter|itruediv|ixor|le|len|
						long|lshift|lt|mod|mul|ne|neg|new|nonzero|oct|or|pos|pow|
						radd|rand|rdiv|rdivmod|repr|rfloordiv|rlshift|rmod|rmul|ror|
						rpow|rrshift|rshift|rsub|rtruediv|rxor|set|setattr|setitem|
						setslice|str|sub|truediv|unicode|xor
					)__)\b</string>
			<key>name</key>
			<string>support.function.magic.plywood</string>
		</dict>
		<key>magic_variable_names</key>
		<dict>
			<key>comment</key>
			<string>magic variables which a class/module may have.</string>
			<key>match</key>
			<string>\b__(all|bases|class|debug|dict|doc|file|members|metaclass|methods|name|slots|weakref)__\b</string>
			<key>name</key>
			<string>support.variable.magic.plywood</string>
		</dict>
		<key>regular_expressions</key>
		<dict>
			<key>comment</key>
			<string>Changed disabled to 1 to turn off syntax highlighting in “r” strings.</string>
			<key>disabled</key>
			<integer>0</integer>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.regexp.plywood</string>
				</dict>
			</array>
		</dict>
		<key>string_quoted_double</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>([uU]r)(""")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted unicode-raw string</string>
					<key>end</key>
					<string>((?&lt;=""")(")""|""")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.block.unicode-raw-regex.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([uU]R)(""")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted unicode-raw string without regular expression highlighting</string>
					<key>end</key>
					<string>((?&lt;=""")(")""|""")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.block.unicode-raw.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(r)(""")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted raw string</string>
					<key>end</key>
					<string>((?&lt;=""")(")""|""")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.block.raw-regex.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(R)(""")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted raw string</string>
					<key>end</key>
					<string>((?&lt;=""")(")""|""")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.block.raw.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([uU])(""")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted unicode string</string>
					<key>end</key>
					<string>((?&lt;=""")(")""|""")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.block.unicode.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([uU]r)(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double-quoted raw string</string>
					<key>end</key>
					<string>((?&lt;=")(")|")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.plywood</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.single-line.unicode-raw-regex.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([uU]R)(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double-quoted raw string</string>
					<key>end</key>
					<string>((?&lt;=")(")|")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.plywood</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.single-line.unicode-raw.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(r)(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double-quoted raw string</string>
					<key>end</key>
					<string>((?&lt;=")(")|")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.plywood</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.single-line.raw-regex.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(R)(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double-quoted raw string</string>
					<key>end</key>
					<string>((?&lt;=")(")|")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.plywood</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.single-line.raw.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([uU])(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted unicode string</string>
					<key>end</key>
					<string>((?&lt;=")(")|")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.plywood</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.single-line.unicode.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(""")(?=\s*(SELECT|INSERT|UPDATE|DELETE|CREATE|REPLACE|ALTER))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted string</string>
					<key>end</key>
					<string>((?&lt;=""")(")""|""")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.block.sql.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.sql</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(")(?=\s*(SELECT|INSERT|UPDATE|DELETE|CREATE|REPLACE|ALTER))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted string</string>
					<key>end</key>
					<string>((?&lt;=")(")|")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.plywood</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.single-line.sql.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.sql</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(""")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted string</string>
					<key>end</key>
					<string>((?&lt;=""")(")""|""")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.block.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted string</string>
					<key>end</key>
					<string>((?&lt;=")(")|")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.plywood</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.single-line.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>string_quoted_single</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.single.plywood</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;!')(')(('))(?!')</string>
					<key>name</key>
					<string>string.quoted.single.single-line.plywood</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>([uU]r)(''')$</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted unicode-raw string</string>
					<key>end</key>
					<string>((?&lt;=''')(')''|''')</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.single.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.block.unicode-raw-regex.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([uU]R)(''')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted unicode-raw string</string>
					<key>end</key>
					<string>((?&lt;=''')(')''|''')</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.single.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.block.unicode-raw.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(r)(''')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted raw string</string>
					<key>end</key>
					<string>((?&lt;=''')(')''|''')</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.single.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.block.raw-regex.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(R)(''')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted raw string</string>
					<key>end</key>
					<string>((?&lt;=''')(')''|''')</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.single.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.block.raw.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([uU])(''')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted unicode string</string>
					<key>end</key>
					<string>((?&lt;=''')(')''|''')</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.single.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.block.unicode.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([uU]r)(')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted raw string</string>
					<key>end</key>
					<string>(')|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.single-line.unicode-raw-regex.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([uU]R)(')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted raw string</string>
					<key>end</key>
					<string>(')|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.single-line.unicode-raw.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(r)(')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted raw string</string>
					<key>end</key>
					<string>(')|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.single-line.raw-regex.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regular_expressions</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(R)(')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted raw string</string>
					<key>end</key>
					<string>(')|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.single-line.raw.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>([uU])(')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.string.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted unicode string</string>
					<key>end</key>
					<string>(')|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.single-line.unicode.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_unicode_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(''')(?=\s*(SELECT|INSERT|UPDATE|DELETE|CREATE|REPLACE|ALTER))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted string</string>
					<key>end</key>
					<string>((?&lt;=''')(')''|''')</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.single.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.block.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.sql</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(')(?=\s*(SELECT|INSERT|UPDATE|DELETE|CREATE|REPLACE|ALTER))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted string</string>
					<key>end</key>
					<string>(')|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.single-line.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.sql</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(''')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted string</string>
					<key>end</key>
					<string>((?&lt;=''')(')''|''')</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.single.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.block.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.plywood</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted string</string>
					<key>end</key>
					<string>(')|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.plywood</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.plywood</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.single-line.plywood</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_quoted_double</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_quoted_single</string>
				</dict>
			</array>
		</dict>
	</dict>
</dict>
</plist>
